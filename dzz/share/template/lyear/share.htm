<!--{template lyear:header_simple_start}-->
<link rel="stylesheet" href="static/lyear/js/bootstrap-table/bootstrap-table.min.css">
<!--{template lyear:header_simple_end}-->
<main class="bs-main-container">
	<div class="container-fluid">
		<div class="card">
			<div class="card-body">
				<div class="card-search mb-2-5">
					  <div class="row">
						<div class="col-md-4">
						  <div class="row">
							<label class="col-sm-4 col-form-label">{lang share_title}</label>
							<div class="col-sm-8">
							  <input type="text" class="form-control pull-left" name="keyword" id="keyword" placeholder="{lang share_title}">
							</div>
						  </div>
						</div>
						<div class="col-md-4">
							<div class="row">
							  <label class="col-sm-4 col-form-label">{lang username}</label>
							  <div class="col-sm-8">
								<input type="text" class="form-control pull-left" name="username" id="username" placeholder="{lang username}">
							  </div>
							</div>
						  </div>
						<div class="col-md-4">
						  <button type="submit" class="btn btn-primary me-1" id="search-btn">搜索</button>
						  <button type="reset" class="btn btn-default" id="refreshsearch">重置</button>
						</div>
					  </div>
				  </div>
                <div id="toolbar" class="toolbar-btn-action">
                  <button id="btn_delete" type="button" class="btn btn-danger">
                    <span class="mdi mdi-delete" aria-hidden="true"></span>{lang del_share}
                  </button>
				  <button id="btn_forbidden" type="button" class="btn btn-warning">
                    <span class="mdi mdi-projector-screen-variant-off-outline" aria-hidden="true"></span>{lang screen_share}
                  </button>
                </div>
                <table id="table"></table>
			</div>
		</div>
	</div>
</main>
<script src="static/lyear/js/bootstrap-table/bootstrap-table.js"></script>
<script src="static/lyear/js/bootstrap-table/locale/bootstrap-table-zh-CN.min.js"></script>
<script>

	/**
     * 批量 删除按钮
     */
	 $(document).on('click', '#btn_delete', function () {
        var self    = $(this);
        var selRows = $('#table').bootstrapTable("getSelections");
        if(selRows.length == 0){
			showmessage("请至少选择一行", 'danger',3000,1);
            return;
        }
        var postData = "";
        $.each(selRows,function(i) {
            postData +=  this.rid;
            if (i < selRows.length - 1) {
                postData += ",";
            }
        });
		showDialog('您确定要删除这'+selRows.length+'文件(如果是文件夹将包含其下的子文件都会被删除)吗？删除之后不可恢复！', 'confirm','', function(){	
			var loader = $('body').lyearloading({
				opacity: 0.2,
				spinnerSize: 'lg'
			});
			jQuery.post('{MOD_URL}&do=delete', {'icoid': postData},function(json){
				loader.destroy();
				if(json['msg']=='success'){
					showmessage('删除成功', 'success', '3000', 1);
					$('#table').bootstrapTable("refresh");
					return false;
				}else if(json['msg']){
					showmessage(json['msg'], 'danger', '3000', 1);
				} else {
					showmessage('{lang error}', 'danger', '3000', 1);
				}
				},'json')
				.fail(function() {
					loader.destroy();
					showmessage('服务器发生错误，请稍后再试', 'danger',3000,1);
		  });
        });
        return false;
    });

	/**
     * 批量 屏蔽按钮
     */
	 $(document).on('click', '#btn_forbidden', function () {
        var self    = $(this);
        var selRows = $('#table').bootstrapTable("getSelections");
        if(selRows.length == 0){
			showmessage("请至少选择一行", 'danger',3000,1);
            return;
        }
        var postData = "";
        $.each(selRows,function(i) {
            postData +=  this.rid;
            if (i < selRows.length - 1) {
                postData += ",";
            }
        });
		showDialog('{lang share_stop_sharing2}', 'confirm','{lang affirm_screen_share}', function(){	
			var loader = $('body').lyearloading({
				opacity: 0.2,
				spinnerSize: 'lg'
			});
			jQuery.post('{MOD_URL}&do=delete', {'icoid': postData},function(json){
				loader.destroy();
				if(json['msg']=='success'){
					showmessage('删除成功', 'success', '3000', 1);
					$('#table').bootstrapTable("refresh");
					return false;
				}else if(json['msg']){
					showmessage(json['msg'], 'danger', '3000', 1);
				} else {
					showmessage('{lang error}', 'danger', '3000', 1);
				}
				},'json')
				.fail(function() {
					loader.destroy();
					showmessage('服务器发生错误，请稍后再试', 'danger',3000,1);
		  });
        });
        return false;
    });

	 /**
     * 搜索按钮
     */
	 $(document).on('click', '#search-btn', function() {
        $('#table').bootstrapTable('refresh');
    })

	/**
     * 重置按钮
     */
	$('#refreshsearch').click(function() {
		// 清空表单内容
        $('#username').val('');
        $('#keyword').val('');
        // 刷新表格
        $('#table').bootstrapTable('refresh');
    });

	/**
     * 类型按钮
     */
	var type = '';
	$(document).on('click', '.type-btn', function() {
		// 移除所有 .type-btn 的 active 类
		$('.type-btn').removeClass('active');
		// 为当前点击的按钮添加 active 类
		$(this).addClass('active');
		// 获取当前的 type 值
		type = $(this).data('type');
		$('#table').bootstrapTable('refresh');
    })
    
	/**
	 * 分页相关的配置
	 **/
	const pagination = {
		// 分页方式：[client] 客户端分页，[server] 服务端分页
		sidePagination: "server",
		// 初始化加载第一页，默认第一页
		pageNumber: 1,
		// 每页的记录行数
		pageSize: 10,
		// 可供选择的每页的行数 - (亲测大于1000存在渲染问题)
		pageList: [5, 10, 25, 50, 100],
		// 在上百页的情况下体验较好 - 能够显示首尾页
		paginationLoop: true,
		// 展示首尾页的最小页数
		paginationPagesBySide: 2,
	};
	
	/**
	 * 按钮相关配置
	 **/
	const button = {
		// 按钮的类
		buttonsClass: 'default',
		// 类名前缀
		buttonsPrefix: 'btn'
	}
	
	/**
	 * 图标相关配置
	 **/
	const icon = {
		// 图标前缀
		iconsPrefix: 'mdi',
		// 图标大小
		iconSize: 'mini',
		// 图标的设置
		icons: {
			paginationSwitchDown: 'mdi-door-closed',
			paginationSwitchUp: 'mdi-door-open',
			refresh: 'mdi-refresh',
			toggleOff: 'mdi-toggle-switch-off',
			toggleOn: 'mdi-toggle-switch',
			columns: 'mdi-table-column-remove',
			detailOpen: 'mdi-plus',
			detailClose: 'mdi-minus',
			fullscreen: 'mdi-monitor-screenshot',
			search: 'mdi-table-search',
			clearSearch: 'mdi-trash-can-outline'
		}
	};
	
	/**
	 * 表格相关的配置
	 **/
	const table = {
		classes: 'table table-bordered table-hover table-striped lyear-table',
		// 请求地址
		url: '{MOD_URL}&do=getinfo',
		// 唯一ID字段
		uniqueId: 'id',
		// 每行的唯一标识字段
		idField: 'id',
		// 是否启用点击选中行
		clickToSelect: true,
		// 是否显示详细视图和列表视图的切换按钮(clickToSelect同时设置为true时点击会报错)
		// showToggle: true,
		// 请求得到的数据类型
		dataType: 'jsonp',
		// 请求方法
		method: 'get',
		// 工具按钮容器
		toolbar: '#toolbar',
		// 是否分页
		pagination: true,
		// 是否显示所有的列
		showColumns: true,
		// 是否显示刷新按钮
		showRefresh: true,
		// 显示图标
		showButtonIcons: true,
		// 显示文本
		showButtonText: false,
		// 显示全屏
		showFullscreen: true,
		// 总数字段
		totalField: 'total',
		// 当字段为 undefined 显示
		undefinedText: '-',
		// 排序方式
		sortOrder: "asc",
		...icon,
		...pagination,
		...button,
		detailView:true,
		detailFormatter:"detailFormatter",
	};
	
	/**
	 * 用于演示的列信息
	 **/
	const columns = [{
		field: 'example',
		checkbox: true,
		// 列的宽度
		width: 5,
		// 宽度单位
		widthUnit: 'rem'
	}, {
		field: 'id',
		title: '编号',
		// 使用[align]，[halign]和[valign]选项来设置列和它们的标题的对齐方式。
		// h表示横向，v标识垂直
		align: 'center',
		switchable: false,
		// 列的宽度
		width: 4,
		// 宽度单位
		widthUnit: 'rem'
	}, {
		field: 'title',
		align: 'center',
		sortable: true,
		title: '{lang sharing_file}',
	}, {
		field: 'dateline',
		sortable: true,
		// 是否可视(默认 - true)
		align: 'center',
		title: '{lang share_time}'
	}, {
		field: 'count',
		sortable: true,
		align: 'center',
		title: '{lang view_count}'
	}, {
        field: 'type',
		align: 'center',
		sortable: true,
        title: '{lang file_type}'
    }, {
        field: 'fstatus',
		align: 'center',
        title: '状态'
    }, <!--{if $_G['adminid']}--> {
		field: 'username',
		align: 'center',
		sortable: true,
		title: '{lang share_user}'
	},<!--{/if}-->  {
        field: 'operate',
        title: '{lang operation}',
        formatter: btnGroup,  // 自定义方法
        events: {
			'click .view-btn': function (event, value, row, index) {
                event.stopPropagation();
                view(row);
            },
            'click .copy-btn': function (event, value, row, index) {
                event.stopPropagation();
                copy(row);
            },
            'click .del-btn': function (event, value, row, index) {
                event.stopPropagation();
                delUser(row);
            }
        }
    }];
    
    // 自定义操作按钮
    function btnGroup () {
        let html =
            '<a class="btn btn-sm btn-default me-1 view-btn" title="{lang view}" data-bs-toggle="tooltip"><i class="mdi mdi-magnify-expand"></i></a><a class="btn btn-sm btn-default me-1 copy-btn" title="{lang copy}" data-bs-toggle="tooltip"><i class="mdi mdi-content-copy"></i></a>' +
            '<a class="btn btn-sm btn-default del-btn" title="{lang delete}" data-bs-toggle="tooltip"><i class="mdi mdi-delete"></i></a>';
        return html;
    }
	// 操作方法 - 预览
    function view(row) {
		window.open(row.sharelink);
    }
	// 操作方法 - 复制
	function copy(row) {
		var text = row.text;
		// 检查浏览器是否支持 Clipboard API
		if (navigator.clipboard && window.isSecureContext) {
			// 使用 Clipboard API 复制文本
			navigator.clipboard.writeText(text)
				.then(() => {
					showmessage('{lang copy_success_paste_need_place}', 'success',3000,1);
				})
				.catch(err => {
					showmessage('err', 'error',3000,1);
				});
		} else {
			const textarea = document.createElement('textarea');
			textarea.value = text;
			document.body.appendChild(textarea);
			textarea.select();
			document.execCommand('copy');
			document.body.removeChild(textarea);
			showmessage('{lang copy_success_paste_need_place}', 'success',3000,1);
		}
	}
    // 操作方法 - 删除
	function delUser(row) {
		showDialog('{lang share_stop_sharing1}', 'confirm','{lang affirm_stop_sharing}', function(){	
			var loader = $('body').lyearloading({
				opacity: 0.2,
				spinnerSize: 'lg'
			});
			var sids = new Array();
			sids.push(row.sid);
			$.ajax({
            type: "post",
            url: "{MOD_URL}&op=ajax&do=delete",
            data: {sids: sids},
            dataType: 'json',
            success: function (res, status) {
				loader.destroy();
                if (res.msg == 'success') {
					showmessage('删除成功', 'success',3000,1);
                    $("#table").bootstrapTable('refresh');
                } else {
					showmessage(res.msg, 'danger',3000,1);
                }
            },
            error: function () {
				loader.destroy();
				showmessage('服务器发生错误，请稍后再试', 'danger',3000,1);
            }
        });
	});
        
    }
	
	$('table').bootstrapTable({
		...table,
		// 自定义的查询参数
		queryParams: function (params) {
			return {
				// 每页数据量
				limit: params.limit,
				// sql语句起始索引
				offset: params.offset,
				page: (params.offset / params.limit) + 1,
				// 排序的列名
				sort: params.sort,
				// 排序方式 'asc' 'desc'
				sortOrder: params.order,
				// 搜索关键词
                keyword: $('#keyword').val(),
				username:$('#username').val(),
				type:type,
			};
		},
		columns,
        onLoadSuccess: function(data){
            $("[data-bs-toggle='tooltip']").tooltip();
        }
	});
	function detailFormatter(index, row) {
		var html = [];
		$.each(row, function (key, value) {
			if (key === 'sharelink' || key === 'password' || key === 'fendtime') {
				var label;
				if (value) {
					switch (key) {
						case 'sharelink':
							label = '{lang link}';
							value = '<a href="' + value + ';">' + value + '</a>';
							break;
						case 'password':
							label = '{lang extract_password}';
							break;
						case 'fendtime':
							label = '{lang expiration_time}';
							break;
						case 'umber':
							label = '{lang limited_number}';
							break;
					}
					html.push('<p><b>' + label + ':</b> ' + value + '</p>');
				}
			}
		});
		return html.join('');
	}

</script>
<!--{template lyear:footer_simple}-->